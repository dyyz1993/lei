<!--
@Author: yingzhou xu
@Date:   2017-04-14T09:53:10+08:00
@Email:  dyyz1993@qq.com
@Filename: tempService.ejs
@Last modified by:   yingzhou xu
@Last modified time: 2017-05-11T18:02:49+08:00
-->



'use strict';

const <%=table%>Module = require(rootPath.concat("/module/<%=table%>Module.js"));
const logger = log4js.getLogger('system');

//查询数据并分页
exports.select = Promise.coroutine(function* (req,res) {
    let conn,data;
    try {
    
        data = { };

        Object.assign(data, req.query);

        const result = yield Promise.all([ <%=table%>Module.select(conn, data), <%=table%>Module.count(conn, data) ]);

        const obj = {
          totalcount: result[1],
          pagecount: req.query.pagecount || config.pagecount,
          page: req.query.page || 1,
        };

        result[1] = obj;

        return res.json(util.success({ data: result }));



    } catch (error) {
        logger.error(error.stack);
        return res.json(config.message.error);
    } 
});

//获取具体记录
exports.get = Promise.coroutine(function* (req,res) {
    let conn;
    try {
    
        let <%=table%> = yield <%=table%>Module.get(conn,req.params);
        return res.json(util.success( {data:<%=table%>} ));

    } catch (error) {
        logger.error(error.stack);
        return res.json(config.message.error);
    } 
});

exports.add = Promise.coroutine(function* (req,res) {
    let conn,data;
    try {
    
        data = util.filterParams(result.data, [ 'openid', 'headimgurl', 'nickname', 'sex', 'city', 'province', 'country', 'subscribe', 'subscribe_time' ]);

        result = util.checkParams(data, [ 'openid' ]);
        

        if (result) {
            res.json(util.fail(config.message.paramsError, { msg: result }));
        }

        const id = yield <%=table%>Module.add(conn,data);

        return res.json(util.success({data:id}));

    } catch (error) {
        logger.error(error.stack);
        return res.json(config.message.error);
    } 
});

//更新
exports.update = Promise.coroutine(function* (req,res) {
    let conn;
    try {
    
        yield <%=table%>Module.update(conn,req.body,req.params);
        return res.json(config.message.success);

    } catch (error) {
        logger.error(error.stack);
        return res.json(config.message.error);
    } 
});

exports.delete = Promise.coroutine(function* (req,res) {
    let conn;
    try {
        
yield <%=table%>Module.delete(conn,req.params);
        return res.json(config.message.success);
    } catch (error) {
        logger.error(error.stack);
        return res.json(config.message.error);
    } 
});
